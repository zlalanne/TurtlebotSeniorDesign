# Autogenerated param section. Do not hand edit.
param {
group.0 {
name=Dynamically Reconfigurable Parameters
desc=See the [[dynamic_reconfigure]] package for details on dynamically reconfigurable parameters.
0.name= ~max_trans_vel
0.default= 0.55
0.type= double
0.desc=The absolute value of the maximum translational velocity for the robot in m/s Range: 0.0 to std::numeric_limits<double>::infinity()
1.name= ~min_trans_vel
1.default= 0.1
1.type= double
1.desc=The absolute value of the minimum translational velocity for the robot in m/s Range: 0.0 to std::numeric_limits<double>::infinity()
2.name= ~max_vel_x
2.default= 0.55
2.type= double
2.desc=The maximum x velocity for the robot in m/s Range: -std::numeric_limits<double>::infinity() to std::numeric_limits<double>::infinity()
3.name= ~min_vel_x
3.default= 0.0
3.type= double
3.desc=The minimum x velocity for the robot in m/s Range: -std::numeric_limits<double>::infinity() to std::numeric_limits<double>::infinity()
4.name= ~max_vel_y
4.default= 0.1
4.type= double
4.desc=The maximum y velocity for the robot in m/s Range: -std::numeric_limits<double>::infinity() to std::numeric_limits<double>::infinity()
5.name= ~min_vel_y
5.default= -0.1
5.type= double
5.desc=The minimum y velocity for the robot in m/s Range: -std::numeric_limits<double>::infinity() to std::numeric_limits<double>::infinity()
6.name= ~max_rot_vel
6.default= 1.0
6.type= double
6.desc=The absolute value of the maximum rotational velocity for the robot in rad/s Range: 0.0 to std::numeric_limits<double>::infinity()
7.name= ~min_rot_vel
7.default= 0.4
7.type= double
7.desc=The absolute value of the minimum rotational velocity for the robot in rad/s Range: 0.0 to std::numeric_limits<double>::infinity()
8.name= ~sim_time
8.default= 1.7
8.type= double
8.desc=The amount of time to roll trajectories out for in seconds Range: 0.0 to std::numeric_limits<double>::infinity()
9.name= ~sim_granularity
9.default= 0.025
9.type= double
9.desc=The granularity with which to check for collisions along each trajectory in meters Range: 0.0 to std::numeric_limits<double>::infinity()
10.name= ~path_distance_bias
10.default= 32.0
10.type= double
10.desc=The weight for the path distance part of the cost function Range: -std::numeric_limits<double>::infinity() to std::numeric_limits<double>::infinity()
11.name= ~goal_distance_bias
11.default= 24.0
11.type= double
11.desc=The weight for the goal distance part of the cost function Range: -std::numeric_limits<double>::infinity() to std::numeric_limits<double>::infinity()
12.name= ~occdist_scale
12.default= 0.01
12.type= double
12.desc=The weight for the obstacle distance part of the cost function Range: -std::numeric_limits<double>::infinity() to std::numeric_limits<double>::infinity()
13.name= ~stop_time_buffer
13.default= 0.2
13.type= double
13.desc=The amount of time that the robot must stop before a collision in order for a trajectory to be considered valid in seconds Range: 0.0 to std::numeric_limits<double>::infinity()
14.name= ~oscillation_reset_dist
14.default= 0.05
14.type= double
14.desc=The distance the robot must travel before oscillation flags are reset, in meters Range: 0.0 to std::numeric_limits<double>::infinity()
15.name= ~forward_point_distance
15.default= 0.325
15.type= double
15.desc=The distance from the center point of the robot to place an additional scoring point, in meters Range: -std::numeric_limits<double>::infinity() to std::numeric_limits<double>::infinity()
16.name= ~scaling_speed
16.default= 0.25
16.type= double
16.desc=The absolute value of the velocity at which to start scaling the robot's footprint, in m/s Range: 0.0 to std::numeric_limits<double>::infinity()
17.name= ~max_scaling_factor
17.default= 0.2
17.type= double
17.desc=The maximum factor to scale the robot's footprint by Range: 0.0 to std::numeric_limits<double>::infinity()
18.name= ~vx_samples
18.default= 3
18.type= int
18.desc=The number of samples to use when exploring the x velocity space Range: 1 to 2147483647
19.name= ~vy_samples
19.default= 10
19.type= int
19.desc=The number of samples to use when exploring the y velocity space Range: 1 to 2147483647
20.name= ~vth_samples
20.default= 20
20.type= int
20.desc=The number of samples to use when exploring the theta velocity space Range: 1 to 2147483647
21.name= ~penalize_negative_x
21.default= True
21.type= bool
21.desc=Whether to penalize trajectories that have negative x velocities. 
22.name= ~restore_defaults
22.default= False
22.type= bool
22.desc=Restore to the original configuration. 
}
}
# End of autogenerated section. You may edit below.
